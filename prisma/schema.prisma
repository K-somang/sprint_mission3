generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String    // 해시된 비밀번호
  role      String    @default("USER") // 예: USER | ADMIN
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

    // 역방향 관계
  products  Product[]
  articles  Article[]
  comments  Comment[]

}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Int
  tags        String[] // 필수 배열, null 허용 안됨
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

    // 외래 키
  userId   Int
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[] @relation("ProductComments")

}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  userId Int
  user   User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  comments Comment[] @relation("ArticleComments")

}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // 작성자
  userId Int
  user   User  @relation(fields: [userId], references: [id], onDelete: Cascade)  
  
  // 관계 설정
  productId Int? 
  articleId Int?
  product  Product? @relation("ProductComments", fields:[productId], references:[id], onDelete:Cascade)
  article  Article? @relation("ArticleComments", fields:[articleId], references:[id], onDelete:Cascade)
  @@index([productId])
  @@index([articleId])
}